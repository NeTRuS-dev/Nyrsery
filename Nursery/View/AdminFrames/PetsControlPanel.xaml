<Page x:Class="Nursery.View.AdminFrames.PetsControlPanel"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Nursery.View.AdminFrames"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PetsControlPanel">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="5*"/>

        </Grid.RowDefinitions>
        <Button Margin="10" Grid.Row="0" MinWidth="150" Content="Выйти из профиля" Command="{Binding BackToLogin}" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource defaultButton}"/>

        <Label Grid.Row="0" Content="Панель питомцев" FontSize="30" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
        <Grid Grid.Row="1">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl HorizontalContentAlignment="Center" ItemsSource="{Binding Pets,UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <Button Height="280" Width="180" Command="{Binding SelectPet}" CommandParameter="{Binding}">

                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Hand"/>

                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#e6e6e6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="White"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding Selected}" Value="True">
                                                            <Setter Property="BorderThickness"  Value="3"/>

                                                            <Setter Property="Background" Value="#ccc"/>
                                                            

                                                        </DataTrigger>
                                                       
                                                    </ControlTemplate.Triggers>

                                                    <Border CornerRadius="10" BorderBrush="Black" Background="{TemplateBinding Background}"  BorderThickness="{TemplateBinding BorderThickness}" Margin="10">
                                                        <StackPanel Orientation="Vertical" Margin="0,5,0,0">
                                                            <Image Source="{Binding bitmapImage}" Height="150" Width="150"/>
                                                            <Label Content="{Binding Name}"  FontWeight="Bold" HorizontalContentAlignment="Center"/>
                                                            <TextBlock Text="{Binding Type.PetType,StringFormat=Род: {0}}" HorizontalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Male.Male,StringFormat=Пол: {0}}" HorizontalAlignment="Center"/>

                                                            <TextBlock Text="{Binding Age,StringFormat=Возраст: {0}}" HorizontalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Price,StringFormat=Цена: {0}}" HorizontalAlignment="Center"/>

                                                        </StackPanel>

                                                    </Border>

                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                    </Style>
                                </Button.Style>

                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Удалить питомца"
                            Command="{Binding DeletePet}"/>
                            <MenuItem Header="Редактировать профиль питомца"
                            Command="{Binding RedactPet}"/>
                        </ContextMenu>

                    </ItemsControl.ContextMenu>
                </ItemsControl>
                <!--<ItemsControl HorizontalContentAlignment="Center" ItemsSource="{Binding Pets,UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <Button Height="280" Width="180" Command="{Binding SelectPet}" CommandParameter="{Binding}">

                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Cursor" Value="Hand"/>

                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#FFD1CCCC"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="White"/>
                                                        </Trigger>
                                                        --><!--<Trigger Property="Button.IsPressed" Value="True">
                                                            <Setter Property="BorderThickness"  Value="2"/>
                                                        </Trigger>-->
                                                        <!--<Trigger 
                                                                Property="Tag" 
                                                                Value="ButtonHasBeenPressed"
                                                                >
                                                            <Setter 
                                                                        Property="Background" 
                                                                        Value="Black" 
                                                                        />
                                                        </Trigger>
                                                        <Trigger Property="Button.IsPressed" Value="True">
                 
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames 
                                                                                 BeginTime="00:00:00" 
                                                                                 Storyboard.TargetProperty="Tag"
                                                                                              >
                                                                            <DiscreteObjectKeyFrame 
                                                                                KeyTime="00:00:00" 
                                                                                Value="ButtonHasBeenPressed" 
                                                                                />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                        </Trigger>--><!--
                                                    </ControlTemplate.Triggers>

                                                    <Border CornerRadius="10" BorderBrush="Black" Background="{TemplateBinding Background}"  BorderThickness="{TemplateBinding BorderThickness}" Margin="10">
                                                        <StackPanel Orientation="Vertical" Margin="0,5,0,0">
                                                            <Image Source="{Binding bitmapImage}" Height="150" Width="150"/>
                                                            <Label Content="{Binding Name}"  FontWeight="Bold" HorizontalContentAlignment="Center"/>
                                                            <TextBlock Text="{Binding Type.PetType,StringFormat=Род: {0}}" HorizontalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Male.Male,StringFormat=Пол: {0}}" HorizontalAlignment="Center"/>

                                                            <TextBlock Text="{Binding Age,StringFormat=Возраст: {0}}" HorizontalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Price,StringFormat=Цена: {0}}" HorizontalAlignment="Center"/>

                                                        </StackPanel>

                                                    </Border>

                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                    </Style>
                                </Button.Style>

                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Удалить питомца"
                            Command="{Binding DeletePet}"/>
                            <MenuItem Header="Редактировать профиль питомца"
                            Command="{Binding RedactPet}"/>
                        </ContextMenu>

                    </ItemsControl.ContextMenu>
                </ItemsControl>-->
            </ScrollViewer>
        </Grid>
        <!--<ListView Style="{StaticResource defaultListBox}" Grid.Row="1" ItemsSource="{Binding Pets,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedPet}" Margin="0,70,0,0">
            -->
        <!--ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
ScrollViewer.VerticalScrollBarVisibility="Auto"-->
        <!--
            <ListView.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <WrapPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin"  Value="5"/>
                                <Setter Property="TextAlignment"  Value="Center"/>
                                <Setter Property="Width"  Value="200"/>
                                <Setter Property="VerticalAlignment"  Value="Center"/>

                            </Style>
                        </WrapPanel.Resources>
                        <TextBlock Text="{Binding Name,StringFormat=Имя: {0}}" />
                        <TextBlock Text="{Binding Type.PetType,StringFormat=Род: {0}}" />
                        <TextBlock Text="{Binding Male.Male,StringFormat=Пол: {0}}" />

                        <TextBlock Text="{Binding Age,StringFormat=Возраст: {0}}" />
                        <TextBlock Text="{Binding Price,StringFormat=Цена: {0}}" />
                        <TextBlock Text="{Binding LastTimeOfEatingStr,StringFormat=Кормили: {0}}" />
                        <TextBlock Text="{Binding GetVactcina,StringFormat=Привит: {0}}" />
                        <Image  Source = "{Binding bitmapImage}"  Height="100" Width="100"/>

                    </WrapPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>-->

        <!--<ListBox Style="{StaticResource defaultListBox}" Grid.Row="1" ItemsSource="{Binding Pets,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedPet}" Height="200" Margin="0,70,0,0" >
            -->
        <!--ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
ScrollViewer.VerticalScrollBarVisibility="Auto"-->
        <!--
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <WrapPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin"  Value="5"/>
                                <Setter Property="TextAlignment"  Value="Center"/>
                                <Setter Property="Width"  Value="200"/>

                            </Style>
                        </WrapPanel.Resources>
                        <TextBlock Text="{Binding Name,StringFormat=Имя: {0}}" />
                        <TextBlock Text="{Binding Type.PetType,StringFormat=Род: {0}}" />
                        <TextBlock Text="{Binding Male.Male,StringFormat=Пол: {0}}" />

                        <TextBlock Text="{Binding Age,StringFormat=Возраст: {0}}" />
                        <TextBlock Text="{Binding Price,StringFormat=Цена: {0}}" />
                        <TextBlock Text="{Binding LastTimeOfEatingStr,StringFormat=Кормили: {0}}" />
                        <TextBlock Text="{Binding GetVactcina,StringFormat=Привит: {0}}" />
                    </WrapPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->
        <!--<DataGrid Grid.Row="1" ItemsSource="{Binding Pets,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedPet}" Margin="0,70,0,0"  Style="{StaticResource defaultDataGrid}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Имя" Binding="{Binding Name}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTextColumn Header="Род"  Binding="{Binding Type.PetType}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTextColumn Header="Пол"  Binding="{Binding Male.Male}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTextColumn Header="Возраст"  Binding="{Binding Age}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTextColumn Header="Цена"  Binding="{Binding Price}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTextColumn Header="Последяя дата кормления"  Binding="{Binding LastTimeOfEatingStr}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTextColumn Header="Привит" Binding="{Binding GetVactcina}" ElementStyle="{StaticResource cellDataGrid}"/>
                <DataGridTemplateColumn Header="Фото">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image  Source = "{Binding bitmapImage}"  Height="100" Width="100"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>-->
    </Grid>
</Page>
